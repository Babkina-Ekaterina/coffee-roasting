version: '2'

services:
  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - '2181:2181'

  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - '9092:9092'
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: 'grain-intake:1:1'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  db:
    image: postgres
    container_name: coffee-roasting-db
    restart: always
    env_file: ./.env
    environment:
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_DB=$POSTGRES_DB
    ports:
      - '5432:5432'

  app:
    container_name: coffee-roasting-app
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '8080:8080'
      - '9090:9090'
    env_file: ./.env
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/$SPRING_DATASOURCE_DB
      - SPRING_DATASOURCE_USERNAME=$SPRING_DATASOURCE_USERNAME
      - SPRING_DATASOURCE_PASSWORD=$SPRING_DATASOURCE_PASSWORD
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9093
    depends_on:
      - db
      - kafka
      - zookeeper